[Part 1] Raster processing
==========================

.. todo:: TO BE UPDATED

Raster data processing is always performed in the current
:ref:`computational region <region>`. Let's demonstrate it on
computing univariate statistics.

.. todo:: screenshot

.. code-blocks:: bash

   r.univar map=dtm_5606

computes statistics from input data located in the current computation
region.

.. todo:: output

Let's change computational region interactively.

.. todo:: screenshot

.. todo:: output

Computing DTM derivates
-----------------------

Before computing let's set up computational region back to our
:ref:`area of interest <aoi>`. Computation of slope or aspect from DTM
is a well known "discipline" in GIS. This functionality in GRASS is
provided by :grasscmd:`r.slope.aspect`. Beside slope or aspect the
tool can also compute curvatures and partial derivatives.

.. todo:: screenshot
                
.. code-block:: bash

   r.slope.aspect elevation=dtm_5606 slope=slope_aoi aspect=aspect_aoi

Working with a mask
-------------------

Raster mask can be created by :grasscmd:`r.mask`. As other modules
from ``r.*`` family it operates in the current computation region.

.. todo:: import vector mask

.. code-block:: bash

   v.buffer input=tile_5606 output=tile_5606_mask distance=-10000
   r.mask vector=tile_5606_mask

.. note:: A mask can be removed by :grasscmd:`r.mask`.

Map algebra
-----------

The key GRASS module which allows a user to map algebra is
-:grasscmd:`r.mapcalc`. A GUI tool for map algebra can be launched
from :menuselection:`Raster --> Raster map calculator` or by
|grass-raster-calculator| :sup:`Raster map calculator` from a main
toolbar.

.. code-block:: bash

   r.mapcalc expression="x = if(dtm_5606 > 1000 && slope_aoi > 40, dtm_5606)"

Automatization
--------------

Graphical Modeler
~~~~~~~~~~~~~~~~~

**Graphical Modeler** allows creating, editing, and managing complex
models in easy-to-use graphical user interface. Using Graphical
Modeler a chain of tool (ie. GRASS modules) can be wrapped
into one process (a model). A model can be executed repeatedly with
slightly different inputs or parameters.

.. todo:: model

v.extract input=odse_tiles output=tile where="tile_id = 5606"
g.region vector=tile align=dtm
r.slope.aspect input=dtm slope=slope_tile
r.univar map=slope_tile

Example of Python script
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

   slope_aoi.py tile_id=5606 elevation=dtm elevation_threshold=1000

   slope_aoi.py tile_id=5606 elevation=dtm
   
.. todo:: write script
